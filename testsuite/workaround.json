{
  "metadataVersion": "0.1.0",
  "source": {
    "hash": "0xc1be130540c0c1ccba88937ba34a2751aed930256fb3723df1b13b964c09858e",
    "language": "ink! 3.0.0-rc3",
    "compiler": "rustc 1.54.0-nightly"
  },
  "contract": {
    "name": "freezer",
    "version": "0.1.0",
    "authors": [
      "[your_name] <[your_email]>"
    ]
  },
  "spec": {
    "constructors": [
      {
        "args": [],
        "docs": [],
        "name": [
          "default"
        ],
        "selector": "0xed4b9d1b"
      }
    ],
    "docs": [],
    "events": [],
    "messages": [
      {
        "args": [
          {
            "name": "to",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 11
            }
          }
        ],
        "docs": [
          " Emit a transfer event while locking",
          " existing coins"
        ],
        "mutates": true,
        "name": [
          "send"
        ],
        "payable": true,
        "returnType": null,
        "selector": "0xe6faf2c0"
      },
      {
        "args": [
          {
            "name": "target_contract",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 11
            }
          },
          {
            "name": "endpoint",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 11
            }
          },
          {
            "name": "args",
            "type": {
              "displayName": [
                "Vec"
              ],
              "type": 18
            }
          }
        ],
        "docs": [
          " Emit an SCCall event",
          " TODO: Charge some token amount for this"
        ],
        "mutates": true,
        "name": [
          "send_sc_call"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x10062b2a"
      },
      {
        "args": [
          {
            "name": "action_id",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 11
            }
          },
          {
            "name": "to",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 4
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 15
            }
          }
        ],
        "docs": [
          " unfreeze tokens and send them to an address",
          " only validators can call this"
        ],
        "mutates": true,
        "name": [
          "pop"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x5dbd4378"
      },
      {
        "args": [
          {
            "name": "action_id",
            "type": {
              "displayName": [
                "String"
              ],
              "type": 11
            }
          },
          {
            "name": "to",
            "type": {
              "displayName": [
                "AccountId"
              ],
              "type": 4
            }
          },
          {
            "name": "value",
            "type": {
              "displayName": [
                "Balance"
              ],
              "type": 15
            }
          },
          {
            "name": "endpoint",
            "type": {
              "displayName": [],
              "type": 16
            }
          },
          {
            "name": "args",
            "type": {
              "displayName": [
                "Option"
              ],
              "type": 17
            }
          }
        ],
        "docs": [],
        "mutates": true,
        "name": [
          "sc_call_verify"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0x845f21ef"
      },
      {
        "args": [],
        "docs": [
          " Subscribe to events & become a validator",
          " TODO: Proper implementation"
        ],
        "mutates": true,
        "name": [
          "subscribe"
        ],
        "payable": false,
        "returnType": null,
        "selector": "0xfb968a8f"
      },
      {
        "args": [],
        "docs": [
          " Number of validators",
          " only for debugging"
        ],
        "mutates": false,
        "name": [
          "validator_cnt"
        ],
        "payable": false,
        "returnType": {
          "displayName": [
            "u32"
          ],
          "type": 2
        },
        "selector": "0xa86d00ff"
      }
    ]
  },
  "storage": {
    "struct": {
      "fields": [
      ]
    }
  },
  "types": [
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "last_vacant",
              "type": 2,
              "typeName": "Index"
            },
            {
              "name": "len",
              "type": 2,
              "typeName": "u32"
            },
            {
              "name": "len_entries",
              "type": 2,
              "typeName": "u32"
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Header"
      ]
    },
    {
      "def": {
        "primitive": "u32"
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 7,
                  "typeName": "VacantEntry"
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 4,
                  "typeName": "T"
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [
        4
      ],
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Entry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "type": 5,
              "typeName": "[u8; 32]"
            }
          ]
        }
      },
      "path": [
        "ink_env",
        "types",
        "AccountId"
      ]
    },
    {
      "def": {
        "array": {
          "len": 32,
          "type": 6
        }
      }
    },
    {
      "def": {
        "primitive": "u8"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "next",
              "type": 2,
              "typeName": "Index"
            },
            {
              "name": "prev",
              "type": 2,
              "typeName": "Index"
            }
          ]
        }
      },
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "VacantEntry"
      ]
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 9,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 2,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        9
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "tuple": []
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "fields": [
                {
                  "type": 7,
                  "typeName": "VacantEntry"
                }
              ],
              "name": "Vacant"
            },
            {
              "fields": [
                {
                  "type": 11,
                  "typeName": "T"
                }
              ],
              "name": "Occupied"
            }
          ]
        }
      },
      "params": [
        11
      ],
      "path": [
        "ink_storage",
        "collections",
        "stash",
        "Entry"
      ]
    },
    {
      "def": {
        "primitive": "str"
      }
    },
    {
      "def": {
        "composite": {
          "fields": [
            {
              "name": "value",
              "type": 13,
              "typeName": "V"
            },
            {
              "name": "key_index",
              "type": 2,
              "typeName": "KeyIndex"
            }
          ]
        }
      },
      "params": [
        13
      ],
      "path": [
        "ink_storage",
        "collections",
        "hashmap",
        "ValueEntry"
      ]
    },
    {
      "def": {
        "primitive": "u128"
      }
    },
    {
      "def": {
        "array": {
          "len": 4,
          "type": 6
        }
      }
    },
    {
      "def": {
        "variant": {
          "variants": [
            {
              "name": "None"
            },
            {
              "fields": [
                {
                  "type": 2,
                  "typeName": "T"
                }
              ],
              "name": "Some"
            }
          ]
        }
      },
      "params": [
        2
      ],
      "path": [
        "Option"
      ]
    }
  ]
}
